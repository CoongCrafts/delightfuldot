import { stringLowerFirst } from '@polkadot/util';
import { normalizeName } from '@delightfuldot/utils';
import { ApiGen } from '../generator';
import { beautifySourceCode, commentBlock } from './utils';

export class ConstsGen extends ApiGen {
  generate() {
    const { pallets } = this.metadata;

    this.typesGen.clearCache();
    this.typesGen.typeImports.addKnownType('GenericChainConsts');

    let defTypeOut = '';
    for (let pallet of pallets) {
      const typedConstants = pallet.constants.map((one) => ({
        name: normalizeName(one.name),
        type: this.typesGen.generateType(one.typeId, 1, true),
        docs: one.docs,
      }));

      defTypeOut += `${stringLowerFirst(pallet.name)}: {${typedConstants
        .map(({ name, type, docs }) => `${commentBlock(docs)}${name}: ${type}`)
        .join(',\n')}},`;
    }

    // TODO improve this!
    return beautifySourceCode(`
// Generated by @delightfuldot/codegen

${this.typesGen.typeImports.toImports()}

export interface ChainConsts extends GenericChainConsts {
  ${defTypeOut}
}
  `);
  }
}
